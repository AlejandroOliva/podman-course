version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: stack-db
    restart: always
    environment:
      POSTGRES_DB: myapp
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: secret123
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - backend
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin" ]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    container_name: stack-backend
    restart: always
    environment:
      DATABASE_URL: postgresql://admin:secret123@db:5432/myapp
    ports:
      - "5000:5000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - backend
      - frontend

  frontend:
    image: nginx:alpine
    container_name: stack-frontend
    restart: always
    ports:
      - "8080:80"
    volumes:
      - ./frontend:/usr/share/nginx/html:Z
    depends_on:
      - backend
    networks:
      - frontend

volumes:
  db-data:


networks:
  backend:
    driver: bridge
  frontend:
    driver: bridge
